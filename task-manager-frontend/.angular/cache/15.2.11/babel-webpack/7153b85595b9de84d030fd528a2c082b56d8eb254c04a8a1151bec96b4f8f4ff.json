{"ast":null,"code":"import * as i0 from \"@angular/core\";\nexport class UserService {\n  constructor() {\n    // Mocked list of at least 5 users\n    this.users = [{\n      id: 1,\n      name: 'Alice',\n      userType: 'Programmer'\n    }, {\n      id: 2,\n      name: 'Bob',\n      userType: 'DevOpsAdministrator'\n    }, {\n      id: 3,\n      name: 'Charlie',\n      userType: 'Programmer'\n    }, {\n      id: 4,\n      name: 'Diana',\n      userType: 'DevOpsAdministrator'\n    }, {\n      id: 5,\n      name: 'Ethan',\n      userType: 'Programmer'\n    }];\n  }\n  // Returns the list of users\n  getUsers() {\n    return this.users;\n  }\n  static {\n    this.ɵfac = function UserService_Factory(t) {\n      return new (t || UserService)();\n    };\n  }\n  static {\n    this.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n      token: UserService,\n      factory: UserService.ɵfac,\n      providedIn: 'root'\n    });\n  }\n}","map":{"version":3,"mappings":";AAOA,OAAM,MAAOA,WAAW;EAUtBC;IATA;IACQ,UAAK,GAAW,CACtB;MAAEC,EAAE,EAAE,CAAC;MAAEC,IAAI,EAAE,OAAO;MAAEC,QAAQ,EAAE;IAAY,CAAE,EAChD;MAAEF,EAAE,EAAE,CAAC;MAAEC,IAAI,EAAE,KAAK;MAAEC,QAAQ,EAAE;IAAqB,CAAE,EACvD;MAAEF,EAAE,EAAE,CAAC;MAAEC,IAAI,EAAE,SAAS;MAAEC,QAAQ,EAAE;IAAY,CAAE,EAClD;MAAEF,EAAE,EAAE,CAAC;MAAEC,IAAI,EAAE,OAAO;MAAEC,QAAQ,EAAE;IAAqB,CAAE,EACzD;MAAEF,EAAE,EAAE,CAAC;MAAEC,IAAI,EAAE,OAAO;MAAEC,QAAQ,EAAE;IAAY,CAAE,CACjD;EAEe;EAEhB;EACAC,QAAQ;IACN,OAAO,IAAI,CAACC,KAAK;EACnB;;;uBAfWN,WAAW;IAAA;EAAA;;;aAAXA,WAAW;MAAAO,SAAXP,WAAW;MAAAQ,YAFV;IAAM;EAAA","names":["UserService","constructor","id","name","userType","getUsers","users","factory","providedIn"],"sourceRoot":"","sources":["C:\\Users\\oracle.admin\\source\\ProService\\task-manager-frontend\\src\\app\\services\\user.service.ts"],"sourcesContent":["// src/app/services/user.service.ts\nimport { Injectable } from '@angular/core';\nimport { User } from '../models/user.model';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class UserService {\n  // Mocked list of at least 5 users\n  private users: User[] = [\n    { id: 1, name: 'Alice', userType: 'Programmer' },\n    { id: 2, name: 'Bob', userType: 'DevOpsAdministrator' },\n    { id: 3, name: 'Charlie', userType: 'Programmer' },\n    { id: 4, name: 'Diana', userType: 'DevOpsAdministrator' },\n    { id: 5, name: 'Ethan', userType: 'Programmer' }\n  ];\n\n  constructor() { }\n\n  // Returns the list of users\n  getUsers(): User[] {\n    return this.users;\n  }\n}\n"]},"metadata":{},"sourceType":"module","externalDependencies":[]}