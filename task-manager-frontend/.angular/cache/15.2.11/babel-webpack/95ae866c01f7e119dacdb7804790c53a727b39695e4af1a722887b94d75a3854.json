{"ast":null,"code":"// task-assignment.component.ts\nexport class TaskAssignmentComponent {\n  constructor() {\n    this.currentPage = 1;\n    this.pageSize = 10;\n    this.totalPages = 0;\n    this.availableTasks = [];\n  }\n  loadAvailableTasks() {\n    if (!this.selectedUser) return;\n    this.taskService.getAvailableTasks(this.selectedUser.id, this.currentPage, this.pageSize).subscribe({\n      next: response => {\n        this.availableTasks = response.data;\n        this.totalPages = response.totalPages;\n        this.currentPage = response.page;\n      },\n      error: err => {\n        console.error('Failed to load available tasks', err);\n      }\n    });\n  }\n  onUserSelected(user) {\n    this.selectedUser = user;\n    this.currentPage = 1; // Reset to first page when user changes\n    this.loadAvailableTasks();\n    // ... rest of existing onUserSelected code ...\n  }\n\n  onPageChange(newPage) {\n    this.currentPage = newPage;\n    this.loadAvailableTasks();\n  }\n  nextPage() {\n    if (this.currentPage < this.totalPages) {\n      this.onPageChange(this.currentPage + 1);\n    }\n  }\n  previousPage() {\n    if (this.currentPage > 1) {\n      this.onPageChange(this.currentPage - 1);\n    }\n  }\n}","map":{"version":3,"mappings":"AAAA;AACA,OAAM,MAAOA,uBAAuB;EAApCC;IACE,gBAAW,GAAG,CAAC;IACf,aAAQ,GAAG,EAAE;IACb,eAAU,GAAG,CAAC;IACd,mBAAc,GAAW,EAAE;EAyC7B;EAvCEC,kBAAkB;IAChB,IAAI,CAAC,IAAI,CAACC,YAAY,EAAE;IAExB,IAAI,CAACC,WAAW,CAACC,iBAAiB,CAAC,IAAI,CAACF,YAAY,CAACG,EAAE,EAAE,IAAI,CAACC,WAAW,EAAE,IAAI,CAACC,QAAQ,CAAC,CACtFC,SAAS,CAAC;MACTC,IAAI,EAAGC,QAAiC,IAAI;QAC1C,IAAI,CAACC,cAAc,GAAGD,QAAQ,CAACE,IAAI;QACnC,IAAI,CAACC,UAAU,GAAGH,QAAQ,CAACG,UAAU;QACrC,IAAI,CAACP,WAAW,GAAGI,QAAQ,CAACI,IAAI;MAClC,CAAC;MACDC,KAAK,EAAEC,GAAG,IAAG;QACXC,OAAO,CAACF,KAAK,CAAC,gCAAgC,EAAEC,GAAG,CAAC;MACtD;KACD,CAAC;EACN;EAEAE,cAAc,CAACC,IAAU;IACvB,IAAI,CAACjB,YAAY,GAAGiB,IAAI;IACxB,IAAI,CAACb,WAAW,GAAG,CAAC,CAAC,CAAC;IACtB,IAAI,CAACL,kBAAkB,EAAE;IACzB;EACF;;EAEAmB,YAAY,CAACC,OAAe;IAC1B,IAAI,CAACf,WAAW,GAAGe,OAAO;IAC1B,IAAI,CAACpB,kBAAkB,EAAE;EAC3B;EAEAqB,QAAQ;IACN,IAAI,IAAI,CAAChB,WAAW,GAAG,IAAI,CAACO,UAAU,EAAE;MACtC,IAAI,CAACO,YAAY,CAAC,IAAI,CAACd,WAAW,GAAG,CAAC,CAAC;;EAE3C;EAEAiB,YAAY;IACV,IAAI,IAAI,CAACjB,WAAW,GAAG,CAAC,EAAE;MACxB,IAAI,CAACc,YAAY,CAAC,IAAI,CAACd,WAAW,GAAG,CAAC,CAAC;;EAE3C","names":["TaskAssignmentComponent","constructor","loadAvailableTasks","selectedUser","taskService","getAvailableTasks","id","currentPage","pageSize","subscribe","next","response","availableTasks","data","totalPages","page","error","err","console","onUserSelected","user","onPageChange","newPage","nextPage","previousPage"],"sourceRoot":"","sources":["C:\\Users\\oracle.admin\\source\\ProService\\ProServiceTaks\\task-manager-frontend\\src\\app\\components\\task-assignment\\task-assignment.component.ts"],"sourcesContent":["// task-assignment.component.ts\nexport class TaskAssignmentComponent implements OnInit {\n  currentPage = 1;\n  pageSize = 10;\n  totalPages = 0;\n  availableTasks: Task[] = [];\n  \n  loadAvailableTasks() {\n    if (!this.selectedUser) return;\n    \n    this.taskService.getAvailableTasks(this.selectedUser.id, this.currentPage, this.pageSize)\n      .subscribe({\n        next: (response: PaginatedResponse<Task>) => {\n          this.availableTasks = response.data;\n          this.totalPages = response.totalPages;\n          this.currentPage = response.page;\n        },\n        error: err => {\n          console.error('Failed to load available tasks', err);\n        }\n      });\n  }\n\n  onUserSelected(user: User): void {\n    this.selectedUser = user;\n    this.currentPage = 1; // Reset to first page when user changes\n    this.loadAvailableTasks();\n    // ... rest of existing onUserSelected code ...\n  }\n\n  onPageChange(newPage: number) {\n    this.currentPage = newPage;\n    this.loadAvailableTasks();\n  }\n\n  nextPage() {\n    if (this.currentPage < this.totalPages) {\n      this.onPageChange(this.currentPage + 1);\n    }\n  }\n\n  previousPage() {\n    if (this.currentPage > 1) {\n      this.onPageChange(this.currentPage - 1);\n    }\n  }\n}"]},"metadata":{},"sourceType":"module","externalDependencies":[]}