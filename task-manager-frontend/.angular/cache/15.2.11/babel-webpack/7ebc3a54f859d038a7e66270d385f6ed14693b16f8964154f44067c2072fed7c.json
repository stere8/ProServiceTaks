{"ast":null,"code":"import * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/common/http\";\nexport class TaskService {\n  constructor(http) {\n    this.http = http;\n    this.baseUrl = '/api/tasks';\n  }\n  /**\r\n   * Get tasks already assigned to the given user, sorted + limited by backend\r\n   */\n  getAssignedTasks(userId) {\n    return this.http.get(`${this.baseUrl}/assigned/${userId}`);\n  }\n  /**\r\n   * Get tasks available for assignment to the given user, sorted + limited by backend\r\n   */\n  getAvailableTasks(userId) {\n    return this.http.get(`${this.baseUrl}/available/${userId}`);\n  }\n  /**\r\n   * Assign the given task IDs to the user.\r\n   * Expects a JSON payload { userId, taskIds } and returns { isSuccess, message }.\r\n   */\n  assignTasks(userId, taskIds) {\n    return this.http.post(`${this.baseUrl}/assign/${userId}`, {\n      userId,\n      taskIds\n    });\n  }\n  static {\n    this.ɵfac = function TaskService_Factory(t) {\n      return new (t || TaskService)(i0.ɵɵinject(i1.HttpClient));\n    };\n  }\n  static {\n    this.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n      token: TaskService,\n      factory: TaskService.ɵfac,\n      providedIn: 'root'\n    });\n  }\n}","map":{"version":3,"mappings":";;AAQA,OAAM,MAAOA,WAAW;EAGtBC,YAAoBC,IAAgB;IAAhB,SAAI,GAAJA,IAAI;IAFhB,YAAO,GAAG,YAAY;EAEU;EAExC;;;EAGAC,gBAAgB,CAACC,MAAc;IAC7B,OAAO,IAAI,CAACF,IAAI,CAACG,GAAG,CAAS,GAAG,IAAI,CAACC,OAAO,aAAaF,MAAM,EAAE,CAAC;EACpE;EAEA;;;EAGAG,iBAAiB,CAACH,MAAc;IAC9B,OAAO,IAAI,CAACF,IAAI,CAACG,GAAG,CAAS,GAAG,IAAI,CAACC,OAAO,cAAcF,MAAM,EAAE,CAAC;EACrE;EAEA;;;;EAIAI,WAAW,CAACJ,MAAc,EAAEK,OAAiB;IAC3C,OAAO,IAAI,CAACP,IAAI,CAACQ,IAAI,CACnB,GAAG,IAAI,CAACJ,OAAO,WAAWF,MAAM,EAAE,EAClC;MAAEA,MAAM;MAAEK;IAAO,CAAE,CACpB;EACH;;;uBA5BWT,WAAW;IAAA;EAAA;;;aAAXA,WAAW;MAAAW,SAAXX,WAAW;MAAAY,YAFV;IAAM;EAAA","names":["TaskService","constructor","http","getAssignedTasks","userId","get","baseUrl","getAvailableTasks","assignTasks","taskIds","post","factory","providedIn"],"sourceRoot":"","sources":["C:\\Users\\oracle.admin\\source\\ProService\\ProServiceTaks\\task-manager-frontend\\src\\app\\services\\task.service.ts"],"sourcesContent":["import { Injectable } from '@angular/core';\nimport { HttpClient } from '@angular/common/http';\nimport { Observable } from 'rxjs';\nimport { Task } from '../models/task.model';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class TaskService {\n  private baseUrl = '/api/tasks';\n\n  constructor(private http: HttpClient) { }\n\n  /**\n   * Get tasks already assigned to the given user, sorted + limited by backend\n   */\n  getAssignedTasks(userId: number): Observable<Task[]> {\n    return this.http.get<Task[]>(`${this.baseUrl}/assigned/${userId}`);\n  }\n\n  /**\n   * Get tasks available for assignment to the given user, sorted + limited by backend\n   */\n  getAvailableTasks(userId: number): Observable<Task[]> {\n    return this.http.get<Task[]>(`${this.baseUrl}/available/${userId}`);\n  }\n\n  /**\n   * Assign the given task IDs to the user.\n   * Expects a JSON payload { userId, taskIds } and returns { isSuccess, message }.\n   */\n  assignTasks(userId: number, taskIds: number[]): Observable<{ isSuccess: boolean; message: string }> {\n    return this.http.post<{ isSuccess: boolean; message: string }>(\n      `${this.baseUrl}/assign/${userId}`,\n      { userId, taskIds }\n    );\n  }\n}\n"]},"metadata":{},"sourceType":"module","externalDependencies":[]}