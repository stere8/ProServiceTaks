{"ast":null,"code":"import { EventEmitter } from '@angular/core';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/common\";\nfunction AvailableTasksComponent_li_4_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r3 = i0.ɵɵgetCurrentView();\n    i0.ɵɵelementStart(0, \"li\", 4);\n    i0.ɵɵlistener(\"click\", function AvailableTasksComponent_li_4_Template_li_click_0_listener() {\n      const restoredCtx = i0.ɵɵrestoreView(_r3);\n      const task_r1 = restoredCtx.$implicit;\n      const ctx_r2 = i0.ɵɵnextContext();\n      return i0.ɵɵresetView(ctx_r2.toggleSelection(task_r1));\n    });\n    i0.ɵɵelementStart(1, \"strong\");\n    i0.ɵɵtext(2);\n    i0.ɵɵelementEnd();\n    i0.ɵɵtext(3);\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const task_r1 = ctx.$implicit;\n    const ctx_r0 = i0.ɵɵnextContext();\n    i0.ɵɵclassProp(\"selected\", ctx_r0.selectedTaskIds.includes(task_r1.id));\n    i0.ɵɵadvance(2);\n    i0.ɵɵtextInterpolate(task_r1.shortDescription);\n    i0.ɵɵadvance(1);\n    i0.ɵɵtextInterpolate1(\" (Difficulty: \", task_r1.difficulty, \") \");\n  }\n}\nexport class AvailableTasksComponent {\n  constructor() {\n    this.tasks = [];\n    this.assignTasks = new EventEmitter();\n    // Array to track selected task IDs\n    this.selectedTaskIds = [];\n  }\n  // Toggle selection on task click\n  toggleSelection(task) {\n    const index = this.selectedTaskIds.indexOf(task.id);\n    if (index !== -1) {\n      // Already selected: unselect it.\n      this.selectedTaskIds.splice(index, 1);\n    } else {\n      // Not selected: add to selection.\n      this.selectedTaskIds.push(task.id);\n    }\n  }\n  // Emit the list of selected task IDs to assign them\n  assignSelected() {\n    if (this.selectedTaskIds.length > 0) {\n      this.assignTasks.emit(this.selectedTaskIds);\n      // Optionally clear the selection after assignment\n      this.selectedTaskIds = [];\n    }\n  }\n  static {\n    this.ɵfac = function AvailableTasksComponent_Factory(t) {\n      return new (t || AvailableTasksComponent)();\n    };\n  }\n  static {\n    this.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n      type: AvailableTasksComponent,\n      selectors: [[\"app-available-tasks\"]],\n      inputs: {\n        tasks: \"tasks\"\n      },\n      outputs: {\n        assignTasks: \"assignTasks\"\n      },\n      decls: 14,\n      vars: 5,\n      consts: [[1, \"available-tasks\"], [3, \"selected\", \"click\", 4, \"ngFor\", \"ngForOf\"], [1, \"pagination-controls\"], [3, \"disabled\", \"click\"], [3, \"click\"]],\n      template: function AvailableTasksComponent_Template(rf, ctx) {\n        if (rf & 1) {\n          i0.ɵɵelementStart(0, \"div\", 0)(1, \"h3\");\n          i0.ɵɵtext(2, \"Available Tasks\");\n          i0.ɵɵelementEnd();\n          i0.ɵɵelementStart(3, \"ul\");\n          i0.ɵɵtemplate(4, AvailableTasksComponent_li_4_Template, 4, 4, \"li\", 1);\n          i0.ɵɵelementEnd();\n          i0.ɵɵelementStart(5, \"div\", 2)(6, \"button\", 3);\n          i0.ɵɵlistener(\"click\", function AvailableTasksComponent_Template_button_click_6_listener() {\n            return ctx.previousPage();\n          });\n          i0.ɵɵtext(7, \"Previous\");\n          i0.ɵɵelementEnd();\n          i0.ɵɵelementStart(8, \"span\");\n          i0.ɵɵtext(9);\n          i0.ɵɵelementEnd();\n          i0.ɵɵelementStart(10, \"button\", 3);\n          i0.ɵɵlistener(\"click\", function AvailableTasksComponent_Template_button_click_10_listener() {\n            return ctx.nextPage();\n          });\n          i0.ɵɵtext(11, \"Next\");\n          i0.ɵɵelementEnd()();\n          i0.ɵɵelementStart(12, \"button\", 3);\n          i0.ɵɵlistener(\"click\", function AvailableTasksComponent_Template_button_click_12_listener() {\n            return ctx.assignSelected();\n          });\n          i0.ɵɵtext(13, \" Assign Selected Tasks \");\n          i0.ɵɵelementEnd()();\n        }\n        if (rf & 2) {\n          i0.ɵɵadvance(4);\n          i0.ɵɵproperty(\"ngForOf\", ctx.tasks);\n          i0.ɵɵadvance(2);\n          i0.ɵɵproperty(\"disabled\", ctx.currentPage === 1);\n          i0.ɵɵadvance(3);\n          i0.ɵɵtextInterpolate1(\"Page \", ctx.currentPage, \"\");\n          i0.ɵɵadvance(1);\n          i0.ɵɵproperty(\"disabled\", ctx.tasks.length < ctx.pageSize);\n          i0.ɵɵadvance(2);\n          i0.ɵɵproperty(\"disabled\", ctx.selectedTaskIds.length === 0);\n        }\n      },\n      dependencies: [i1.NgForOf],\n      styles: [\".available-tasks[_ngcontent-%COMP%] {\\r\\n    border: 1px solid #ccc;\\r\\n    padding: 10px;\\r\\n  }\\r\\n  \\r\\n  .available-tasks[_ngcontent-%COMP%]   ul[_ngcontent-%COMP%] {\\r\\n    list-style: none;\\r\\n    padding: 0;\\r\\n  }\\r\\n  \\r\\n  .available-tasks[_ngcontent-%COMP%]   li[_ngcontent-%COMP%] {\\r\\n    padding: 5px;\\r\\n    cursor: pointer;\\r\\n    border-bottom: 1px solid #eee;\\r\\n  }\\r\\n  \\r\\n  .available-tasks[_ngcontent-%COMP%]   li.selected[_ngcontent-%COMP%] {\\r\\n    background-color: #d9edf7;  \\r\\n  }\\r\\n  \\r\\n  .available-tasks[_ngcontent-%COMP%]   button[_ngcontent-%COMP%] {\\r\\n    margin-top: 10px;\\r\\n    padding: 5px 10px;\\r\\n  }\\n/*# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8uL3NyYy9hcHAvY29tcG9uZW50cy9hdmFpbGFibGUtdGFza3MvYXZhaWxhYmxlLXRhc2tzLmNvbXBvbmVudC5jc3MiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQUE7SUFDSSxzQkFBc0I7SUFDdEIsYUFBYTtFQUNmOztFQUVBO0lBQ0UsZ0JBQWdCO0lBQ2hCLFVBQVU7RUFDWjs7RUFFQTtJQUNFLFlBQVk7SUFDWixlQUFlO0lBQ2YsNkJBQTZCO0VBQy9COztFQUVBO0lBQ0UseUJBQXlCLEdBQUcsNkNBQTZDO0VBQzNFOztFQUVBO0lBQ0UsZ0JBQWdCO0lBQ2hCLGlCQUFpQjtFQUNuQiIsInNvdXJjZXNDb250ZW50IjpbIi5hdmFpbGFibGUtdGFza3Mge1xyXG4gICAgYm9yZGVyOiAxcHggc29saWQgI2NjYztcclxuICAgIHBhZGRpbmc6IDEwcHg7XHJcbiAgfVxyXG4gIFxyXG4gIC5hdmFpbGFibGUtdGFza3MgdWwge1xyXG4gICAgbGlzdC1zdHlsZTogbm9uZTtcclxuICAgIHBhZGRpbmc6IDA7XHJcbiAgfVxyXG4gIFxyXG4gIC5hdmFpbGFibGUtdGFza3MgbGkge1xyXG4gICAgcGFkZGluZzogNXB4O1xyXG4gICAgY3Vyc29yOiBwb2ludGVyO1xyXG4gICAgYm9yZGVyLWJvdHRvbTogMXB4IHNvbGlkICNlZWU7XHJcbiAgfVxyXG4gIFxyXG4gIC5hdmFpbGFibGUtdGFza3MgbGkuc2VsZWN0ZWQge1xyXG4gICAgYmFja2dyb3VuZC1jb2xvcjogI2Q5ZWRmNzsgIC8qIExpZ2h0IGJsdWUgYmFja2dyb3VuZCBmb3Igc2VsZWN0ZWQgdGFza3MgKi9cclxuICB9XHJcbiAgXHJcbiAgLmF2YWlsYWJsZS10YXNrcyBidXR0b24ge1xyXG4gICAgbWFyZ2luLXRvcDogMTBweDtcclxuICAgIHBhZGRpbmc6IDVweCAxMHB4O1xyXG4gIH1cclxuICAiXSwic291cmNlUm9vdCI6IiJ9 */\"]\n    });\n  }\n}","map":{"version":3,"mappings":"AAAA,SAAmCA,YAAY,QAAQ,eAAe;;;;;;ICGlEC,6BAEyD;IADrDA;MAAA;MAAA;MAAA;MAAA,OAASA,8CAAqB;IAAA,EAAC;IAEjCA,8BAAQ;IAAAA,YAA2B;IAAAA,iBAAS;IAACA,YAC/C;IAAAA,iBAAK;;;;;IAFDA,uEAAoD;IAC9CA,eAA2B;IAA3BA,8CAA2B;IAAUA,eAC/C;IAD+CA,iEAC/C;;;ADCJ,OAAM,MAAOC,uBAAuB;EALpCC;IAMW,UAAK,GAAW,EAAE;IACjB,gBAAW,GAAG,IAAIH,YAAY,EAAY;IAEpD;IACA,oBAAe,GAAa,EAAE;;EAE9B;EACAI,eAAe,CAACC,IAAU;IACxB,MAAMC,KAAK,GAAG,IAAI,CAACC,eAAe,CAACC,OAAO,CAACH,IAAI,CAACI,EAAE,CAAC;IACnD,IAAIH,KAAK,KAAK,CAAC,CAAC,EAAE;MAChB;MACA,IAAI,CAACC,eAAe,CAACG,MAAM,CAACJ,KAAK,EAAE,CAAC,CAAC;KACtC,MAAM;MACL;MACA,IAAI,CAACC,eAAe,CAACI,IAAI,CAACN,IAAI,CAACI,EAAE,CAAC;;EAEtC;EAEA;EACAG,cAAc;IACZ,IAAI,IAAI,CAACL,eAAe,CAACM,MAAM,GAAG,CAAC,EAAE;MACnC,IAAI,CAACC,WAAW,CAACC,IAAI,CAAC,IAAI,CAACR,eAAe,CAAC;MAC3C;MACA,IAAI,CAACA,eAAe,GAAG,EAAE;;EAE7B;;;uBA1BWL,uBAAuB;IAAA;EAAA;;;YAAvBA,uBAAuB;MAAAc;MAAAC;QAAAC;MAAA;MAAAC;QAAAL;MAAA;MAAAM;MAAAC;MAAAC;MAAAC;QAAA;UCRpCtB,8BAA6B;UACvBA,+BAAe;UAAAA,iBAAK;UACxBA,0BAAI;UACFA,sEAIK;UACPA,iBAAK;UACLA,8BAAiC;UACvBA;YAAA,OAASuB,kBAAc;UAAA,EAAC;UAAgCvB,wBAAQ;UAAAA,iBAAS;UACjFA,4BAAM;UAAAA,YAAsB;UAAAA,iBAAO;UACnCA,kCAAkE;UAA1DA;YAAA,OAASuB,cAAU;UAAA,EAAC;UAAsCvB,qBAAI;UAAAA,iBAAS;UAEjFA,kCAA6E;UAArEA;YAAA,OAASuB,oBAAgB;UAAA,EAAC;UAChCvB,wCACF;UAAAA,iBAAS;;;UAbcA,eAAQ;UAARA,mCAAQ;UAOIA,eAA8B;UAA9BA,gDAA8B;UACzDA,eAAsB;UAAtBA,mDAAsB;UACCA,eAAoC;UAApCA,0DAAoC;UAEhCA,eAAyC;UAAzCA,2DAAyC","names":["EventEmitter","i0","AvailableTasksComponent","constructor","toggleSelection","task","index","selectedTaskIds","indexOf","id","splice","push","assignSelected","length","assignTasks","emit","selectors","inputs","tasks","outputs","decls","vars","consts","template","ctx"],"sourceRoot":"","sources":["C:\\Users\\oracle.admin\\source\\ProService\\ProServiceTaks\\task-manager-frontend\\src\\app\\components\\available-tasks\\available-tasks.component.ts","C:\\Users\\oracle.admin\\source\\ProService\\ProServiceTaks\\task-manager-frontend\\src\\app\\components\\available-tasks\\available-tasks.component.html"],"sourcesContent":["import { Component, Input, Output, EventEmitter } from '@angular/core';\nimport { Task } from '../../models/task.model';\n\n@Component({\n  selector: 'app-available-tasks',\n  templateUrl: './available-tasks.component.html',\n  styleUrls: ['./available-tasks.component.css']\n})\nexport class AvailableTasksComponent {\n  @Input() tasks: Task[] = [];\n  @Output() assignTasks = new EventEmitter<number[]>();\n\n  // Array to track selected task IDs\n  selectedTaskIds: number[] = [];\n\n  // Toggle selection on task click\n  toggleSelection(task: Task): void {\n    const index = this.selectedTaskIds.indexOf(task.id);\n    if (index !== -1) {\n      // Already selected: unselect it.\n      this.selectedTaskIds.splice(index, 1);\n    } else {\n      // Not selected: add to selection.\n      this.selectedTaskIds.push(task.id);\n    }\n  }\n\n  // Emit the list of selected task IDs to assign them\n  assignSelected(): void {\n    if (this.selectedTaskIds.length > 0) {\n      this.assignTasks.emit(this.selectedTaskIds);\n      // Optionally clear the selection after assignment\n      this.selectedTaskIds = [];\n    }\n  }\n}\n","<div class=\"available-tasks\">\n  <h3>Available Tasks</h3>\n  <ul>\n    <li *ngFor=\"let task of tasks\" \n        (click)=\"toggleSelection(task)\"\n        [class.selected]=\"selectedTaskIds.includes(task.id)\">\n      <strong>{{ task.shortDescription }}</strong> (Difficulty: {{ task.difficulty }})\n    </li>\n  </ul>\n  <div class=\"pagination-controls\">\n    <button (click)=\"previousPage()\" [disabled]=\"currentPage === 1\">Previous</button>\n    <span>Page {{ currentPage }}</span>\n    <button (click)=\"nextPage()\" [disabled]=\"tasks.length < pageSize\">Next</button>\n  </div>\n  <button (click)=\"assignSelected()\" [disabled]=\"selectedTaskIds.length === 0\">\n    Assign Selected Tasks\n  </button>\n</div>"]},"metadata":{},"sourceType":"module","externalDependencies":[]}